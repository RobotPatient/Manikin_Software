/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.babypatients.babysim_testapp;
import com.fazecast.jSerialComm.*;
import java.awt.Color;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JPanel;
import org.jfree.data.time.DynamicTimeSeriesCollection;
import org.jfree.data.time.Second;

public class main_panel extends javax.swing.JFrame {

    /**
     * Creates new form main_panel
     */
    public main_panel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the (Netbeans) Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComLabel = new javax.swing.JLabel();
        jBaudLabel = new javax.swing.JLabel();
        jConnectButton = new javax.swing.JButton();
        jGraphFrameSens1 = new javax.swing.JPanel();
        jGraphFrameSens2 = new javax.swing.JPanel();
        jSensorTypeSens1 = new javax.swing.JComboBox<>();
        jSensorTypeLabelSens2 = new javax.swing.JLabel();
        jSensor1Label = new javax.swing.JLabel();
        jSensor2Label = new javax.swing.JLabel();
        jSensorTypeLabelSens1 = new javax.swing.JLabel();
        jSensorTypeSens2 = new javax.swing.JComboBox<>();
        jConnectionStatus = new javax.swing.JLabel();
        jConnectionStatusLabel = new javax.swing.JLabel();
        jComChooser = new javax.swing.JComboBox<>();
        jDisconnectButton = new javax.swing.JButton();
        jBaudrateBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jComLabel.setText("COM:");

        jBaudLabel.setText("BAUD:");

        jConnectButton.setText("Connect");
        jConnectButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jConnectButtonMouseClicked(evt);
            }
        });
        jConnectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jConnectButtonActionPerformed(evt);
            }
        });

        jGraphFrameSens1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jGraphFrameSens1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jGraphFrameSens1AncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        javax.swing.GroupLayout jGraphFrameSens1Layout = new javax.swing.GroupLayout(jGraphFrameSens1);
        jGraphFrameSens1.setLayout(jGraphFrameSens1Layout);
        jGraphFrameSens1Layout.setHorizontalGroup(
            jGraphFrameSens1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jGraphFrameSens1Layout.setVerticalGroup(
            jGraphFrameSens1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 214, Short.MAX_VALUE)
        );

        jGraphFrameSens2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jGraphFrameSens2.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jGraphFrameSens2AncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        javax.swing.GroupLayout jGraphFrameSens2Layout = new javax.swing.GroupLayout(jGraphFrameSens2);
        jGraphFrameSens2.setLayout(jGraphFrameSens2Layout);
        jGraphFrameSens2Layout.setHorizontalGroup(
            jGraphFrameSens2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jGraphFrameSens2Layout.setVerticalGroup(
            jGraphFrameSens2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jSensorTypeSens1.setModel(jComboBoxSensorType1Model);
        jSensorTypeSens1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSensorTypeSens1ActionPerformed(evt);
            }
        });

        jSensorTypeLabelSens2.setText("Sensor type:");

        jSensor1Label.setText("Sensor 1:");

        jSensor2Label.setText("Sensor 2:");

        jSensorTypeLabelSens1.setText("Sensor type:");

        jSensorTypeSens2.setModel(jComboBoxSensorType2Model);
        jSensorTypeSens2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSensorTypeSens2ActionPerformed(evt);
            }
        });

        jConnectionStatus.setBackground(new java.awt.Color(255, 255, 255));
        jConnectionStatus.setText("Not connected");
        jConnectionStatus.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jConnectionStatus.setOpaque(true);

        jConnectionStatusLabel.setText("Status:");

        jComChooser.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jComChooserAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jDisconnectButton.setText("Disconnect");
        jDisconnectButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jDisconnectButtonMouseClicked(evt);
            }
        });

        jBaudrateBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "250000", "115200", "9600" }));
        jBaudrateBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBaudrateBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jGraphFrameSens1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSensorTypeLabelSens1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSensorTypeSens1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jGraphFrameSens2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSensorTypeLabelSens2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSensorTypeSens2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(55, 55, 55))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBaudLabel)
                .addGap(3, 3, 3)
                .addComponent(jBaudrateBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jConnectButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDisconnectButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jConnectionStatusLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jConnectionStatus)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jSensor1Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(166, 166, 166)
                .addComponent(jSensor2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(143, 143, 143))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSensor1Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSensor2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jGraphFrameSens1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jGraphFrameSens2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSensorTypeLabelSens2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSensorTypeSens2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSensorTypeSens1)
                            .addComponent(jSensorTypeLabelSens1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jConnectionStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComLabel)
                        .addComponent(jBaudLabel)
                        .addComponent(jConnectButton)
                        .addComponent(jConnectionStatusLabel)
                        .addComponent(jComChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jDisconnectButton)
                        .addComponent(jBaudrateBox)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initGraph(JPanel panel, SensorGraph Graph, SensorType GraphType){
         Graph.init(panel);
         Graph.setChartType(GraphType);
    }
    
    private int getBaudrateFromComboBox(JComboBox combobox){
            String baudrateFieldText= (String) combobox.getSelectedItem();
            try{
            	return Integer.parseInt(baudrateFieldText);
            }
            catch (NumberFormatException ex){
                ex.printStackTrace();
            }     
            return DefaultBaudrate;
    }
    private void jConnectButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jConnectButtonMouseClicked
        int SelectedIndex = jComChooser.getSelectedIndex();
        if(selectedSerialPort != null){
            if(selectedSerialPort.isOpen()){
                System.out.println("Disconnecting Port: "+selectedSerialPort.getDescriptivePortName());
                selectedSerialPort.closePort();
            }
        }
        selectedSerialPort = availableSerialPorts[SelectedIndex];
        if(selectedSerialPort.openPort()){
            jConnectionStatus.setText("Connected!");
            jConnectionStatus.setBackground(Color.green);
            int baudrate = getBaudrateFromComboBox(jBaudrateBox);
            selectedSerialPort.setBaudRate(baudrate);
            Serial_event_listener SerialDataListener = new Serial_event_listener();
            SerialDataListener.datasetSens1 = GraphSensor1.dataset;
            SerialDataListener.selectedSerialPort = selectedSerialPort;
            SerialDataListener.datasetSens2 = GraphSensor2.dataset;
            SerialDataListener.typeSensor1  = GraphSensor1.getChartType();
            SerialDataListener.typeSensor2 = GraphSensor2.getChartType();
            selectedSerialPort.addDataListener(SerialDataListener);
        }
        else{
           	jConnectionStatus.setText("Fail!");
           	jConnectionStatus.setBackground(Color.red);
        }
    }//GEN-LAST:event_jConnectButtonMouseClicked

    private void jComChooserAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jComChooserAncestorAdded
        availableSerialPorts = SerialPort.getCommPorts();
        String PortName;
        for (SerialPort availableSerialPort : availableSerialPorts) {
           PortName = availableSerialPort.getSystemPortName() + ": " + availableSerialPort.getDescriptivePortName();
           jComChooser.addItem(PortName);
        }
    }//GEN-LAST:event_jComChooserAncestorAdded

    private void jConnectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jConnectButtonActionPerformed

    }//GEN-LAST:event_jConnectButtonActionPerformed

    private void jDisconnectButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jDisconnectButtonMouseClicked
        if(selectedSerialPort != null){
            if(selectedSerialPort.isOpen()){
                System.out.println("Disconnecting Port: "+selectedSerialPort.getDescriptivePortName());
                selectedSerialPort.closePort();
                jConnectionStatus.setText("Disconnected");
                jConnectionStatus.setBackground(Color.white);
            }
        }
    }//GEN-LAST:event_jDisconnectButtonMouseClicked

    private void jGraphFrameSens1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jGraphFrameSens1AncestorAdded
        SensorType Sensor = (SensorType) jSensorTypeSens1.getSelectedItem();
        initGraph(jGraphFrameSens1, GraphSensor1,  Sensor);
    }//GEN-LAST:event_jGraphFrameSens1AncestorAdded

    private void jGraphFrameSens2AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jGraphFrameSens2AncestorAdded
        SensorType Sensor = (SensorType) jSensorTypeSens1.getSelectedItem();
        initGraph(jGraphFrameSens2, GraphSensor2,  Sensor);
    }//GEN-LAST:event_jGraphFrameSens2AncestorAdded

    private void jSensorTypeSens1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSensorTypeSens1ActionPerformed
        SensorType Sensor = (SensorType) jSensorTypeSens1.getSelectedItem();
        GraphSensor1.setChartType(Sensor);
    }//GEN-LAST:event_jSensorTypeSens1ActionPerformed

    private void jSensorTypeSens2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSensorTypeSens2ActionPerformed
        SensorType Sensor = (SensorType) jSensorTypeSens2.getSelectedItem();
        GraphSensor2.setChartType(Sensor);
    }//GEN-LAST:event_jSensorTypeSens2ActionPerformed

    private void jBaudrateBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBaudrateBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBaudrateBoxActionPerformed
    private DynamicTimeSeriesCollection datasetSens1 = new DynamicTimeSeriesCollection(1, 100, new Second());
    private DynamicTimeSeriesCollection datasetSens2 = new DynamicTimeSeriesCollection(1, 100, new Second());
    private SerialPort[] availableSerialPorts;
    private SerialPort selectedSerialPort;
    private SensorGraph GraphSensor1 = new SensorGraph();
    private SensorGraph GraphSensor2 = new SensorGraph();
    private final DefaultComboBoxModel jComboBoxSensorType1Model = new DefaultComboBoxModel(SensorType.values());
    private final DefaultComboBoxModel jComboBoxSensorType2Model = new DefaultComboBoxModel(SensorType.values());
    private final int DefaultBaudrate = 250000;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jBaudLabel;
    private javax.swing.JComboBox<String> jBaudrateBox;
    private javax.swing.JComboBox<String> jComChooser;
    private javax.swing.JLabel jComLabel;
    private javax.swing.JButton jConnectButton;
    private javax.swing.JLabel jConnectionStatus;
    private javax.swing.JLabel jConnectionStatusLabel;
    private javax.swing.JButton jDisconnectButton;
    private javax.swing.JPanel jGraphFrameSens1;
    private javax.swing.JPanel jGraphFrameSens2;
    private javax.swing.JLabel jSensor1Label;
    private javax.swing.JLabel jSensor2Label;
    private javax.swing.JLabel jSensorTypeLabelSens1;
    private javax.swing.JLabel jSensorTypeLabelSens2;
    private javax.swing.JComboBox<String> jSensorTypeSens1;
    private javax.swing.JComboBox<String> jSensorTypeSens2;
    // End of variables declaration//GEN-END:variables
}
